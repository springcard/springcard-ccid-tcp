# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# $Id: Makefile.am 6752 2016-03-09 18:27:04Z albert $


am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/springcard_ccid_tcp
pkgincludedir = $(includedir)/springcard_ccid_tcp
pkglibdir = $(libdir)/springcard_ccid_tcp
pkglibexecdir = $(libexecdir)/springcard_ccid_tcp
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = armv7l-unknown-linux-gnueabihf
host_triplet = armv7l-unknown-linux-gnueabihf
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/as-ac-expand.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libspringcard_ccid_tcp_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__libspringcard_ccid_tcp_la_SOURCES_DIST = ccid.c ccid.h \
	ccid_ifdhandler.h commands.c commands.h debug.h defs.h \
	ifdhandler.c utils.c utils.h ccid_network.c ccid_network.h \
	tokenparser.l parser.h strlcpy.c misc.h strlcpycat.h \
	simclist.c simclist.h debug.c towitoko/atr.c towitoko/atr.h \
	towitoko/defines.h towitoko/pps.c towitoko/pps.h \
	openct/buffer.c openct/buffer.h openct/checksum.c \
	openct/checksum.h openct/proto-t1.c openct/proto-t1.h
am__objects_1 = libspringcard_ccid_tcp_la-ccid.lo \
	libspringcard_ccid_tcp_la-commands.lo \
	libspringcard_ccid_tcp_la-ifdhandler.lo \
	libspringcard_ccid_tcp_la-utils.lo
am__objects_2 = libspringcard_ccid_tcp_la-ccid_network.lo
am__objects_3 = libspringcard_ccid_tcp_la-tokenparser.lo \
	libspringcard_ccid_tcp_la-strlcpy.lo \
	libspringcard_ccid_tcp_la-simclist.lo
#am__objects_4 = libspringcard_ccid_tcp_la-debug.lo
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_5 = towitoko/libspringcard_ccid_tcp_la-atr.lo \
	towitoko/libspringcard_ccid_tcp_la-pps.lo \
	openct/libspringcard_ccid_tcp_la-buffer.lo \
	openct/libspringcard_ccid_tcp_la-checksum.lo \
	openct/libspringcard_ccid_tcp_la-proto-t1.lo
am_libspringcard_ccid_tcp_la_OBJECTS = $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5)
libspringcard_ccid_tcp_la_OBJECTS =  \
	$(am_libspringcard_ccid_tcp_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libspringcard_ccid_tcp_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) \
	$(libspringcard_ccid_tcp_la_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/libspringcard_ccid_tcp_la-ccid.Plo \
	./$(DEPDIR)/libspringcard_ccid_tcp_la-ccid_network.Plo \
	./$(DEPDIR)/libspringcard_ccid_tcp_la-commands.Plo \
	./$(DEPDIR)/libspringcard_ccid_tcp_la-debug.Plo \
	./$(DEPDIR)/libspringcard_ccid_tcp_la-ifdhandler.Plo \
	./$(DEPDIR)/libspringcard_ccid_tcp_la-simclist.Plo \
	./$(DEPDIR)/libspringcard_ccid_tcp_la-strlcpy.Plo \
	./$(DEPDIR)/libspringcard_ccid_tcp_la-tokenparser.Plo \
	./$(DEPDIR)/libspringcard_ccid_tcp_la-utils.Plo \
	openct/$(DEPDIR)/libspringcard_ccid_tcp_la-buffer.Plo \
	openct/$(DEPDIR)/libspringcard_ccid_tcp_la-checksum.Plo \
	openct/$(DEPDIR)/libspringcard_ccid_tcp_la-proto-t1.Plo \
	towitoko/$(DEPDIR)/libspringcard_ccid_tcp_la-atr.Plo \
	towitoko/$(DEPDIR)/libspringcard_ccid_tcp_la-pps.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
am__skiplex = test -f $@ ||
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(LEX) $(AM_LFLAGS) $(LFLAGS)
AM_V_LEX = $(am__v_LEX_$(V))
am__v_LEX_ = $(am__v_LEX_$(AM_DEFAULT_VERBOSITY))
am__v_LEX_0 = @echo "  LEX     " $@;
am__v_LEX_1 = 
YLWRAP = $(top_srcdir)/ylwrap
SOURCES = $(libspringcard_ccid_tcp_la_SOURCES)
DIST_SOURCES = $(am__libspringcard_ccid_tcp_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/ylwrap tokenparser.c
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/pi/share/clone/springcard-ccid-tcp/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/pi/share/clone/springcard-ccid-tcp/missing autoconf
AUTOHEADER = ${SHELL} /home/pi/share/clone/springcard-ccid-tcp/missing autoheader
AUTOMAKE = ${SHELL} /home/pi/share/clone/springcard-ccid-tcp/missing automake-1.16
AWK = mawk
BUNDLE_HOST = Linux
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
DYN_LIB_EXT = so
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = 
LEX = ${SHELL} /home/pi/share/clone/springcard-ccid-tcp/missing flex
LEXLIB = 
LEX_OUTPUT_ROOT = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = ./ltmain.sh
LIBUSB_CFLAGS = -I/usr/include/libusb-1.0
LIBUSB_LIBS = -lusb-1.0
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINFO = ${SHELL} /home/pi/share/clone/springcard-ccid-tcp/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
NOCLASS = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = springcard_ccid_tcp
PACKAGE_BUGREPORT = 
PACKAGE_NAME = springcard_ccid_tcp
PACKAGE_STRING = springcard_ccid_tcp 1.4.20
PACKAGE_TARNAME = springcard_ccid_tcp
PACKAGE_URL = 
PACKAGE_VERSION = 1.4.20
PATH_SEPARATOR = :
PCSC_CFLAGS = -pthread -I/usr/include/PCSC
PCSC_LIBS = -lpcsclite
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
SYMBOL_VISIBILITY = -fvisibility=hidden
VERSION = 1.4.20
abs_builddir = /home/pi/share/clone/springcard-ccid-tcp/src
abs_srcdir = /home/pi/share/clone/springcard-ccid-tcp/src
abs_top_builddir = /home/pi/share/clone/springcard-ccid-tcp
abs_top_srcdir = /home/pi/share/clone/springcard-ccid-tcp
ac_aux_dir = .
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
bindir_exp = /usr/local/bin
build = armv7l-unknown-linux-gnueabihf
build_alias = 
build_cpu = armv7l
build_os = linux-gnueabihf
build_vendor = unknown
builddir = .
bundle = ifd-springcard-ccid-tcp.bundle
ccidethernetdir = /usr/lib/pcsc/drivers/ethernet
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
ethernetconfdir = /etc/reader.conf.d
exec_prefix = ${prefix}
host = armv7l-unknown-linux-gnueabihf
host_alias = 
host_cpu = armv7l
host_os = linux-gnueabihf
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/pi/share/clone/springcard-ccid-tcp/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
sysconfdir_exp = /usr/local/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
usbdropdir = /usr/lib/pcsc/drivers
CCID_BUNDLE = $(bundle)
CCID_LIB = libspringcard_ccid_tcp.$(DYN_LIB_EXT)
CCID_VERSION = CCID_VERSION=`$(srcdir)/convert_version.pl $(PACKAGE_VERSION)`
COMMON = ccid.c \
	ccid.h \
	ccid_ifdhandler.h \
	commands.c \
	commands.h \
	debug.h \
	defs.h \
	ifdhandler.c \
	utils.c \
	utils.h

NETWORK = ccid_network.c ccid_network.h
T1 = towitoko/atr.c \
	towitoko/atr.h \
	towitoko/defines.h \
	towitoko/pps.c \
	towitoko/pps.h \
	openct/buffer.c \
	openct/buffer.h \
	openct/checksum.c \
	openct/checksum.h \
	openct/proto-t1.c \
	openct/proto-t1.h

TOKEN_PARSER = tokenparser.l parser.h \
	strlcpy.c \
	misc.h \
	strlcpycat.h \
	simclist.c \
	simclist.h

#PROVIDED_BY_PCSC = debug.c

#libspringcardccidtcp_la_SOURCES = $(COMMON) $(USB) $(ETHERNET) $(TOKEN_PARSER) $(PROVIDED_BY_PCSC) $(T1)
#libspringcardccidtcp_la_LIBADD = $(LEXLIB) $(LIBUSB_LIBS) $(PTHREAD_LIBS)
#libspringcardccidtcp_la_CFLAGS = $(PCSC_CFLAGS) $(LIBUSB_CFLAGS) $(PTHREAD_CFLAGS) \
#	$(SYMBOL_VISIBILITY) -D$(CCID_VERSION) -DSIMCLIST_NO_DUMPRESTORE
#libspringcardccidtcp_la_LDFLAGS = -avoid-version

#parse_SOURCES = parse.c debug.c ccid_usb.c $(TOKEN_PARSER)
#parse_LDADD = $(LIBUSB_LIBS)
#parse_CFLAGS = $(PCSC_CFLAGS) $(LIBUSB_CFLAGS) -DSIMCLIST_NO_DUMPRESTORE
lib_LTLIBRARIES = libspringcard_ccid_tcp.la
libspringcard_ccid_tcp_la_SOURCES = $(COMMON) $(NETWORK) $(TOKEN_PARSER) $(PROVIDED_BY_PCSC) $(T1)
libspringcard_ccid_tcp_la_LIBADD = $(LEXLIB) $(LIBUSB_LIBS) $(PTHREAD_LIBS)
libspringcard_ccid_tcp_la_CFLAGS = $(PCSC_CFLAGS) $(LIBUSB_CFLAGS) $(PTHREAD_CFLAGS) \
	$(SYMBOL_VISIBILITY) -D$(CCID_VERSION) -DSIMCLIST_NO_DUMPRESTORE

libspringcard_ccid_tcp_la_LDFLAGS = -avoid-version

#parse_SOURCES = parse.c debug.c ccid_network.c $(TOKEN_PARSER)
#parse_LDADD = $(LIBUSB_LIBS)
#parse_CFLAGS = $(PCSC_CFLAGS) $(LIBUSB_CFLAGS) -DSIMCLIST_NO_DUMPRESTORE
EXTRA_DIST = Info.plist.src create_Info_plist.pl reader.conf.in \
	towitoko/COPYING towitoko/README openct/LICENSE \
	convert_version.pl 92_pcscd_springcardccidtcp.rules


# We can't use install-exec-local since we want to overwrite the install
# rule. We do not want to _add_ files to install
#install: $(LIBS_TO_INSTALL)
INSTALL_UDEV_RULE_FILE = @/bin/echo -e "\n\33[01;31m***************\n" ; echo "copy the src/92_pcscd_springcardccidtcp.rules file in udev directory (/etc/udev/rules.d/)" ; /bin/echo -e "\n***************\n\33[0m"
DISTCLEANFILES = tokenparser.c Info.plist
all: all-am

.SUFFIXES:
.SUFFIXES: .c .l .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
towitoko/$(am__dirstamp):
	@$(MKDIR_P) towitoko
	@: > towitoko/$(am__dirstamp)
towitoko/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) towitoko/$(DEPDIR)
	@: > towitoko/$(DEPDIR)/$(am__dirstamp)
towitoko/libspringcard_ccid_tcp_la-atr.lo: towitoko/$(am__dirstamp) \
	towitoko/$(DEPDIR)/$(am__dirstamp)
towitoko/libspringcard_ccid_tcp_la-pps.lo: towitoko/$(am__dirstamp) \
	towitoko/$(DEPDIR)/$(am__dirstamp)
openct/$(am__dirstamp):
	@$(MKDIR_P) openct
	@: > openct/$(am__dirstamp)
openct/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) openct/$(DEPDIR)
	@: > openct/$(DEPDIR)/$(am__dirstamp)
openct/libspringcard_ccid_tcp_la-buffer.lo: openct/$(am__dirstamp) \
	openct/$(DEPDIR)/$(am__dirstamp)
openct/libspringcard_ccid_tcp_la-checksum.lo: openct/$(am__dirstamp) \
	openct/$(DEPDIR)/$(am__dirstamp)
openct/libspringcard_ccid_tcp_la-proto-t1.lo: openct/$(am__dirstamp) \
	openct/$(DEPDIR)/$(am__dirstamp)

libspringcard_ccid_tcp.la: $(libspringcard_ccid_tcp_la_OBJECTS) $(libspringcard_ccid_tcp_la_DEPENDENCIES) $(EXTRA_libspringcard_ccid_tcp_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libspringcard_ccid_tcp_la_LINK) -rpath $(libdir) $(libspringcard_ccid_tcp_la_OBJECTS) $(libspringcard_ccid_tcp_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f openct/*.$(OBJEXT)
	-rm -f openct/*.lo
	-rm -f towitoko/*.$(OBJEXT)
	-rm -f towitoko/*.lo

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libspringcard_ccid_tcp_la-ccid.Plo # am--include-marker
include ./$(DEPDIR)/libspringcard_ccid_tcp_la-ccid_network.Plo # am--include-marker
include ./$(DEPDIR)/libspringcard_ccid_tcp_la-commands.Plo # am--include-marker
include ./$(DEPDIR)/libspringcard_ccid_tcp_la-debug.Plo # am--include-marker
include ./$(DEPDIR)/libspringcard_ccid_tcp_la-ifdhandler.Plo # am--include-marker
include ./$(DEPDIR)/libspringcard_ccid_tcp_la-simclist.Plo # am--include-marker
include ./$(DEPDIR)/libspringcard_ccid_tcp_la-strlcpy.Plo # am--include-marker
include ./$(DEPDIR)/libspringcard_ccid_tcp_la-tokenparser.Plo # am--include-marker
include ./$(DEPDIR)/libspringcard_ccid_tcp_la-utils.Plo # am--include-marker
include openct/$(DEPDIR)/libspringcard_ccid_tcp_la-buffer.Plo # am--include-marker
include openct/$(DEPDIR)/libspringcard_ccid_tcp_la-checksum.Plo # am--include-marker
include openct/$(DEPDIR)/libspringcard_ccid_tcp_la-proto-t1.Plo # am--include-marker
include towitoko/$(DEPDIR)/libspringcard_ccid_tcp_la-atr.Plo # am--include-marker
include towitoko/$(DEPDIR)/libspringcard_ccid_tcp_la-pps.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libspringcard_ccid_tcp_la-ccid.lo: ccid.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -MT libspringcard_ccid_tcp_la-ccid.lo -MD -MP -MF $(DEPDIR)/libspringcard_ccid_tcp_la-ccid.Tpo -c -o libspringcard_ccid_tcp_la-ccid.lo `test -f 'ccid.c' || echo '$(srcdir)/'`ccid.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libspringcard_ccid_tcp_la-ccid.Tpo $(DEPDIR)/libspringcard_ccid_tcp_la-ccid.Plo
#	$(AM_V_CC)source='ccid.c' object='libspringcard_ccid_tcp_la-ccid.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -c -o libspringcard_ccid_tcp_la-ccid.lo `test -f 'ccid.c' || echo '$(srcdir)/'`ccid.c

libspringcard_ccid_tcp_la-commands.lo: commands.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -MT libspringcard_ccid_tcp_la-commands.lo -MD -MP -MF $(DEPDIR)/libspringcard_ccid_tcp_la-commands.Tpo -c -o libspringcard_ccid_tcp_la-commands.lo `test -f 'commands.c' || echo '$(srcdir)/'`commands.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libspringcard_ccid_tcp_la-commands.Tpo $(DEPDIR)/libspringcard_ccid_tcp_la-commands.Plo
#	$(AM_V_CC)source='commands.c' object='libspringcard_ccid_tcp_la-commands.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -c -o libspringcard_ccid_tcp_la-commands.lo `test -f 'commands.c' || echo '$(srcdir)/'`commands.c

libspringcard_ccid_tcp_la-ifdhandler.lo: ifdhandler.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -MT libspringcard_ccid_tcp_la-ifdhandler.lo -MD -MP -MF $(DEPDIR)/libspringcard_ccid_tcp_la-ifdhandler.Tpo -c -o libspringcard_ccid_tcp_la-ifdhandler.lo `test -f 'ifdhandler.c' || echo '$(srcdir)/'`ifdhandler.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libspringcard_ccid_tcp_la-ifdhandler.Tpo $(DEPDIR)/libspringcard_ccid_tcp_la-ifdhandler.Plo
#	$(AM_V_CC)source='ifdhandler.c' object='libspringcard_ccid_tcp_la-ifdhandler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -c -o libspringcard_ccid_tcp_la-ifdhandler.lo `test -f 'ifdhandler.c' || echo '$(srcdir)/'`ifdhandler.c

libspringcard_ccid_tcp_la-utils.lo: utils.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -MT libspringcard_ccid_tcp_la-utils.lo -MD -MP -MF $(DEPDIR)/libspringcard_ccid_tcp_la-utils.Tpo -c -o libspringcard_ccid_tcp_la-utils.lo `test -f 'utils.c' || echo '$(srcdir)/'`utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libspringcard_ccid_tcp_la-utils.Tpo $(DEPDIR)/libspringcard_ccid_tcp_la-utils.Plo
#	$(AM_V_CC)source='utils.c' object='libspringcard_ccid_tcp_la-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -c -o libspringcard_ccid_tcp_la-utils.lo `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

libspringcard_ccid_tcp_la-ccid_network.lo: ccid_network.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -MT libspringcard_ccid_tcp_la-ccid_network.lo -MD -MP -MF $(DEPDIR)/libspringcard_ccid_tcp_la-ccid_network.Tpo -c -o libspringcard_ccid_tcp_la-ccid_network.lo `test -f 'ccid_network.c' || echo '$(srcdir)/'`ccid_network.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libspringcard_ccid_tcp_la-ccid_network.Tpo $(DEPDIR)/libspringcard_ccid_tcp_la-ccid_network.Plo
#	$(AM_V_CC)source='ccid_network.c' object='libspringcard_ccid_tcp_la-ccid_network.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -c -o libspringcard_ccid_tcp_la-ccid_network.lo `test -f 'ccid_network.c' || echo '$(srcdir)/'`ccid_network.c

libspringcard_ccid_tcp_la-tokenparser.lo: tokenparser.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -MT libspringcard_ccid_tcp_la-tokenparser.lo -MD -MP -MF $(DEPDIR)/libspringcard_ccid_tcp_la-tokenparser.Tpo -c -o libspringcard_ccid_tcp_la-tokenparser.lo `test -f 'tokenparser.c' || echo '$(srcdir)/'`tokenparser.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libspringcard_ccid_tcp_la-tokenparser.Tpo $(DEPDIR)/libspringcard_ccid_tcp_la-tokenparser.Plo
#	$(AM_V_CC)source='tokenparser.c' object='libspringcard_ccid_tcp_la-tokenparser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -c -o libspringcard_ccid_tcp_la-tokenparser.lo `test -f 'tokenparser.c' || echo '$(srcdir)/'`tokenparser.c

libspringcard_ccid_tcp_la-strlcpy.lo: strlcpy.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -MT libspringcard_ccid_tcp_la-strlcpy.lo -MD -MP -MF $(DEPDIR)/libspringcard_ccid_tcp_la-strlcpy.Tpo -c -o libspringcard_ccid_tcp_la-strlcpy.lo `test -f 'strlcpy.c' || echo '$(srcdir)/'`strlcpy.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libspringcard_ccid_tcp_la-strlcpy.Tpo $(DEPDIR)/libspringcard_ccid_tcp_la-strlcpy.Plo
#	$(AM_V_CC)source='strlcpy.c' object='libspringcard_ccid_tcp_la-strlcpy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -c -o libspringcard_ccid_tcp_la-strlcpy.lo `test -f 'strlcpy.c' || echo '$(srcdir)/'`strlcpy.c

libspringcard_ccid_tcp_la-simclist.lo: simclist.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -MT libspringcard_ccid_tcp_la-simclist.lo -MD -MP -MF $(DEPDIR)/libspringcard_ccid_tcp_la-simclist.Tpo -c -o libspringcard_ccid_tcp_la-simclist.lo `test -f 'simclist.c' || echo '$(srcdir)/'`simclist.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libspringcard_ccid_tcp_la-simclist.Tpo $(DEPDIR)/libspringcard_ccid_tcp_la-simclist.Plo
#	$(AM_V_CC)source='simclist.c' object='libspringcard_ccid_tcp_la-simclist.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -c -o libspringcard_ccid_tcp_la-simclist.lo `test -f 'simclist.c' || echo '$(srcdir)/'`simclist.c

libspringcard_ccid_tcp_la-debug.lo: debug.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -MT libspringcard_ccid_tcp_la-debug.lo -MD -MP -MF $(DEPDIR)/libspringcard_ccid_tcp_la-debug.Tpo -c -o libspringcard_ccid_tcp_la-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libspringcard_ccid_tcp_la-debug.Tpo $(DEPDIR)/libspringcard_ccid_tcp_la-debug.Plo
#	$(AM_V_CC)source='debug.c' object='libspringcard_ccid_tcp_la-debug.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -c -o libspringcard_ccid_tcp_la-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

towitoko/libspringcard_ccid_tcp_la-atr.lo: towitoko/atr.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -MT towitoko/libspringcard_ccid_tcp_la-atr.lo -MD -MP -MF towitoko/$(DEPDIR)/libspringcard_ccid_tcp_la-atr.Tpo -c -o towitoko/libspringcard_ccid_tcp_la-atr.lo `test -f 'towitoko/atr.c' || echo '$(srcdir)/'`towitoko/atr.c
	$(AM_V_at)$(am__mv) towitoko/$(DEPDIR)/libspringcard_ccid_tcp_la-atr.Tpo towitoko/$(DEPDIR)/libspringcard_ccid_tcp_la-atr.Plo
#	$(AM_V_CC)source='towitoko/atr.c' object='towitoko/libspringcard_ccid_tcp_la-atr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -c -o towitoko/libspringcard_ccid_tcp_la-atr.lo `test -f 'towitoko/atr.c' || echo '$(srcdir)/'`towitoko/atr.c

towitoko/libspringcard_ccid_tcp_la-pps.lo: towitoko/pps.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -MT towitoko/libspringcard_ccid_tcp_la-pps.lo -MD -MP -MF towitoko/$(DEPDIR)/libspringcard_ccid_tcp_la-pps.Tpo -c -o towitoko/libspringcard_ccid_tcp_la-pps.lo `test -f 'towitoko/pps.c' || echo '$(srcdir)/'`towitoko/pps.c
	$(AM_V_at)$(am__mv) towitoko/$(DEPDIR)/libspringcard_ccid_tcp_la-pps.Tpo towitoko/$(DEPDIR)/libspringcard_ccid_tcp_la-pps.Plo
#	$(AM_V_CC)source='towitoko/pps.c' object='towitoko/libspringcard_ccid_tcp_la-pps.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -c -o towitoko/libspringcard_ccid_tcp_la-pps.lo `test -f 'towitoko/pps.c' || echo '$(srcdir)/'`towitoko/pps.c

openct/libspringcard_ccid_tcp_la-buffer.lo: openct/buffer.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -MT openct/libspringcard_ccid_tcp_la-buffer.lo -MD -MP -MF openct/$(DEPDIR)/libspringcard_ccid_tcp_la-buffer.Tpo -c -o openct/libspringcard_ccid_tcp_la-buffer.lo `test -f 'openct/buffer.c' || echo '$(srcdir)/'`openct/buffer.c
	$(AM_V_at)$(am__mv) openct/$(DEPDIR)/libspringcard_ccid_tcp_la-buffer.Tpo openct/$(DEPDIR)/libspringcard_ccid_tcp_la-buffer.Plo
#	$(AM_V_CC)source='openct/buffer.c' object='openct/libspringcard_ccid_tcp_la-buffer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -c -o openct/libspringcard_ccid_tcp_la-buffer.lo `test -f 'openct/buffer.c' || echo '$(srcdir)/'`openct/buffer.c

openct/libspringcard_ccid_tcp_la-checksum.lo: openct/checksum.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -MT openct/libspringcard_ccid_tcp_la-checksum.lo -MD -MP -MF openct/$(DEPDIR)/libspringcard_ccid_tcp_la-checksum.Tpo -c -o openct/libspringcard_ccid_tcp_la-checksum.lo `test -f 'openct/checksum.c' || echo '$(srcdir)/'`openct/checksum.c
	$(AM_V_at)$(am__mv) openct/$(DEPDIR)/libspringcard_ccid_tcp_la-checksum.Tpo openct/$(DEPDIR)/libspringcard_ccid_tcp_la-checksum.Plo
#	$(AM_V_CC)source='openct/checksum.c' object='openct/libspringcard_ccid_tcp_la-checksum.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -c -o openct/libspringcard_ccid_tcp_la-checksum.lo `test -f 'openct/checksum.c' || echo '$(srcdir)/'`openct/checksum.c

openct/libspringcard_ccid_tcp_la-proto-t1.lo: openct/proto-t1.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -MT openct/libspringcard_ccid_tcp_la-proto-t1.lo -MD -MP -MF openct/$(DEPDIR)/libspringcard_ccid_tcp_la-proto-t1.Tpo -c -o openct/libspringcard_ccid_tcp_la-proto-t1.lo `test -f 'openct/proto-t1.c' || echo '$(srcdir)/'`openct/proto-t1.c
	$(AM_V_at)$(am__mv) openct/$(DEPDIR)/libspringcard_ccid_tcp_la-proto-t1.Tpo openct/$(DEPDIR)/libspringcard_ccid_tcp_la-proto-t1.Plo
#	$(AM_V_CC)source='openct/proto-t1.c' object='openct/libspringcard_ccid_tcp_la-proto-t1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libspringcard_ccid_tcp_la_CFLAGS) $(CFLAGS) -c -o openct/libspringcard_ccid_tcp_la-proto-t1.lo `test -f 'openct/proto-t1.c' || echo '$(srcdir)/'`openct/proto-t1.c

.l.c:
	$(AM_V_LEX)$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf openct/.libs openct/_libs
	-rm -rf towitoko/.libs towitoko/_libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install-exec: install-exec-am
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f openct/$(DEPDIR)/$(am__dirstamp)
	-rm -f openct/$(am__dirstamp)
	-rm -f towitoko/$(DEPDIR)/$(am__dirstamp)
	-rm -f towitoko/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f tokenparser.c
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-ccid.Plo
	-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-ccid_network.Plo
	-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-commands.Plo
	-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-debug.Plo
	-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-ifdhandler.Plo
	-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-simclist.Plo
	-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-strlcpy.Plo
	-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-tokenparser.Plo
	-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-utils.Plo
	-rm -f openct/$(DEPDIR)/libspringcard_ccid_tcp_la-buffer.Plo
	-rm -f openct/$(DEPDIR)/libspringcard_ccid_tcp_la-checksum.Plo
	-rm -f openct/$(DEPDIR)/libspringcard_ccid_tcp_la-proto-t1.Plo
	-rm -f towitoko/$(DEPDIR)/libspringcard_ccid_tcp_la-atr.Plo
	-rm -f towitoko/$(DEPDIR)/libspringcard_ccid_tcp_la-pps.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-ccid.Plo
	-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-ccid_network.Plo
	-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-commands.Plo
	-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-debug.Plo
	-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-ifdhandler.Plo
	-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-simclist.Plo
	-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-strlcpy.Plo
	-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-tokenparser.Plo
	-rm -f ./$(DEPDIR)/libspringcard_ccid_tcp_la-utils.Plo
	-rm -f openct/$(DEPDIR)/libspringcard_ccid_tcp_la-buffer.Plo
	-rm -f openct/$(DEPDIR)/libspringcard_ccid_tcp_la-checksum.Plo
	-rm -f openct/$(DEPDIR)/libspringcard_ccid_tcp_la-proto-t1.Plo
	-rm -f towitoko/$(DEPDIR)/libspringcard_ccid_tcp_la-atr.Plo
	-rm -f towitoko/$(DEPDIR)/libspringcard_ccid_tcp_la-pps.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


Info.plist: Info.plist.src $(srcdir)/../readers/supported_readers.txt
	$(srcdir)/create_Info_plist.pl $(srcdir)/../readers/supported_readers.txt $(srcdir)/Info.plist.src --target=$(CCID_LIB) --version=$(VERSION) $(NOCLASS) > Info.plist

install: libspringcard_ccid_tcp.la Info.plist
	$(mkinstalldirs) $(DESTDIR)$(usbdropdir)/$(CCID_BUNDLE)/Contents/$(BUNDLE_HOST)/
	cp Info.plist $(DESTDIR)$(usbdropdir)/$(CCID_BUNDLE)/Contents/
	cp .libs/$(CCID_LIB) $(DESTDIR)$(usbdropdir)/$(CCID_BUNDLE)/Contents/$(BUNDLE_HOST)/$(CCID_LIB)
#	$(INSTALL_UDEV_RULE_FILE)

# do not uninstall the serial driver by default
# use explicitely 'make uninstall_ccidtwin'

uninstall:
	rm -rf $(DESTDIR)$(usbdropdir)/$(CCID_BUNDLE)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
